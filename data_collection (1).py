# -*- coding: utf-8 -*-
"""data collection

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GAAIFna1xjUuCmw6zV34u1Lo4FL1ua4x
"""

import os

API_KEY = os.getenv("71a10953-1117-4740-9bf6-799777aec72e")

import requests
import pandas as pd
from datetime import datetime

# Replace this with your IQAir API key
API_KEY = "71a10953-1117-4740-9bf6-799777aec72e"

# Location: Karachi, Sindh, Pakistan
CITY = "Karachi"
STATE = "Sindh"
COUNTRY = "Pakistan"

def fetch_iqair_data(api_key, city, state, country):
    url = f"http://api.airvisual.com/v2/city?city={city}&state={state}&country={country}&key={api_key}"
    response = requests.get(url)
    data = response.json()

    if data['status'] != 'success':
        print("‚ùå Failed to fetch data:", data)
        return pd.DataFrame()

    city_data = data['data']
    current = city_data['current']
    pollution = current['pollution']
    weather = current['weather']

    # Parse ISO timestamp string
    ts = pd.to_datetime(pollution['ts'])

    record = {
        "datetime": ts,
        "aqi_us": pollution['aqius'],      # AQI (US scale)
        "main_pollutant": pollution['mainus'],
        "temperature": weather['tp'],      # ¬∞C
        "humidity": weather['hu'],         # %
        "wind_speed": weather['ws'],       # m/s
        "hour": ts.hour,
        "day": ts.day,
        "month": ts.month
    }

    return pd.DataFrame([record])

# Fetch & preview
df = fetch_iqair_data(API_KEY, CITY, STATE, COUNTRY)

if not df.empty:
    df.to_csv("raw_data.csv", index=False)
    display(df)
else:
    print("‚ùå No data returned. Check your API key or location.")

import requests

def fetch_iqair_data(api_key, city, state, country):
    url = f"http://api.airvisual.com/v2/city?city={city}&state={state}&country={country}&key={api_key}"
    response = requests.get(url).json()

    print("üîç API Response:")
    print(response)  # üõë This helps identify if 'current' is missing or if there's an error

    # Existing code
    pollution = response['data']['current']['pollution']
    weather = response['data']['current']['weather']

# data_collection.py
import requests
import pandas as pd
from datetime import datetime
import os

API_KEY = "71a10953-1117-4740-9bf6-799777aec72e" # Will be injected by GitHub Actions

def fetch_iqair_data(api_key):
    url = f"http://api.airvisual.com/v2/nearest_city?key={api_key}"
    response = requests.get(url).json()

    if response['status'] != 'success':
        print("‚ùå Failed to fetch data:", response)
        return pd.DataFrame()

    pollution = response['data']['current']['pollution']
    weather = response['data']['current']['weather']
    ts = pd.to_datetime(pollution['ts'])

    record = {
        "datetime": ts,
        "aqi_us": pollution['aqius'],
        "main_pollutant": pollution['mainus'],
        "temperature": weather['tp'],
        "humidity": weather['hu'],
        "wind_speed": weather['ws'],
        "hour": ts.hour,
        "day": ts.day,
        "month": ts.month
    }

    df = pd.DataFrame([record])
    if os.path.exists("raw_data.csv"):
        df.to_csv("raw_data.csv", mode='a', header=False, index=False)
    else:
        df.to_csv("raw_data.csv", index=False)

    print("‚úÖ Data saved at", ts)
    return df

# Fetch & preview
df = fetch_iqair_data(API_KEY)

if not df.empty:
    print(df)
else:
    print("‚ùå No data returned. Check your API key or try again later.")